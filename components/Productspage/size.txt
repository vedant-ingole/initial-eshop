
    {/* Size  */}
                 <div className="my-7 ">
                    <div className="flex items-center justify-between ">
                        <h3 className="text-lg text-gray-900 font-medium ">Size</h3>
                        <a href="#" className="text-sm font-medium text-indigo-600 hover:text-indigo-500">
                            Size guide
                        </a>
                    </div>

                    <RadioGroup value={selectedSize} onChange={setSelectedSize} className="mt-4 ">
                    <RadioGroup.Label className="sr-only">Choose a size</RadioGroup.Label>
                    <div className="grid grid-cols-4 gap-5 sm:grid-cols-8 lg:grid-cols-4">
                        {sizes.map((size, index) => (
                        <RadioGroup.Option
                            key={index}
                            value={size}
                            // disabled={!size.inStock}
                            className={({ active }) =>
                            classNames(
                                // size.inStock
                                size
                                ? 'bg-white shadow-sm text-gray-900 cursor-pointer '
                                : 'bg-gray-50 text-gray-200 cursor-not-allowed ',
                                active ? 'ring-2 ring-indigo-500' : '',
                                'group relative border rounded-md py-3 px-4 flex items-center justify-center text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none sm:flex-1 sm:py-6'
                            )
                            }
                        >
                            {({ active, checked }) => (
                            <>
                                <RadioGroup.Label as="p">{size.name}</RadioGroup.Label>
                                <RadioGroup.Label as="p">{size}</RadioGroup.Label>
                                {/* {size.inStock ? ( */}
                                {size ? (
                                <div
                                    className={classNames(
                                    active ? 'border' : 'border-2',
                                    checked ? 'border-indigo-500' : 'border-transparent',
                                    'absolute -inset-px rounded-md pointer-events-none'
                                    )}
                                    aria-hidden="true"
                                />
                                ) : (
                                <div
                                    aria-hidden="true"
                                    className="absolute -inset-px rounded-md border-2 border-gray-200 pointer-events-none"
                                >
                                     <svg
                                    className="absolute inset-0 w-full h-full text-gray-200 stroke-2"
                                    viewBox="0 0 100 100"
                                    preserveAspectRatio="none"
                                    stroke="currentColor"
                                    >
                                    <line x1={0} y1={100} x2={100} y2={0} vectorEffect="non-scaling-stroke" />
                                    </svg> 
                                </div>
                                )}
                            </>
                            )}
                        </RadioGroup.Option>
                        ))}
                    </div>
                    </RadioGroup>
                 </div>



     COLORRRRRRRRR
         <div className=" min-h-[7rem]">
                     <h3 className="text-lg text-gray-900 font-medium ">Color</h3>

                    <RadioGroup 
                        value={selectedColor} onChange={setSelectedColor} 
                        className="py-6 mx-1">
                    <RadioGroup.Label className="sr-only">Choose a color</RadioGroup.Label>
                        <div className="flex items-center space-x-3">
                            {colors.map((color, index) => (
                                <RadioGroup.Option
                                    key={index}
                                    value={color}
                                    className={({ active, checked }) =>
                                    classNames(
                                        color.selectedClass,
                                        active && checked ? 'ring ring-offset-1' : '',
                                        !active && checked ? 'ring-2' : '',
                                        '-m-0.5 p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none'
                                    )
                                    }
                                >
                                    <RadioGroup.Label as="p" className="sr-only">
                                    {color}
                                    </RadioGroup.Label>
                                    <span
                                    aria-hidden="true"
                                    className={classNames(
                                        color,
                                        'h-8 w-8 border border-black border-opacity-10 rounded-full'
                                    )}
                                    />
                                </RadioGroup.Option>
                            ))}
                        </div>
                    </RadioGroup>
                 </div>            